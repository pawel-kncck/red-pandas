version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: red-pandas-mongo
    restart: unless-stopped
    ports:
      - '27017:27017'
    volumes:
      - mongo-data:/data/db
      - mongo-config:/data/configdb
    environment:
      MONGO_INITDB_DATABASE: red_pandas_db
    networks:
      - red-pandas-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: red-pandas-backend
    restart: unless-stopped
    ports:
      - '8000:8000'
    volumes:
      - ./backend:/app
      - backend-venv:/app/venv
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
      - DATABASE_NAME=red_pandas_db
      - PYTHONUNBUFFERED=1
      - WATCHFILES_FORCE_POLLING=true
    env_file:
      - ./backend/.env
    depends_on:
      mongodb:
        condition: service_healthy
    networks:
      - red-pandas-network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # React Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: red-pandas-frontend
    restart: unless-stopped
    ports:
      - '5173:5173'
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000
      - CHOKIDAR_USEPOLLING=true
    networks:
      - red-pandas-network
    command: npm run dev -- --host 0.0.0.0

networks:
  red-pandas-network:
    driver: bridge

volumes:
  mongo-data:
  mongo-config:
  backend-venv:
